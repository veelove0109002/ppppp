name: Build PassWall for iStoreOS

on:
  workflow_dispatch:
    inputs:
      target_arch:
        description: '目标架构'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - x86_64
          - aarch64_cortex-a53
          - aarch64_generic
      build_option:
        description: '构建选项'
        required: true
        default: 'standard'
        type: choice
        options:
          - minimal
          - standard
          - full

permissions:
  contents: write

jobs:
  build:
    name: 构建 PassWall 安装包
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 获取日期
        id: date
        run: echo "date=$(date)" >> $GITHUB_OUTPUT

      - name: 准备目录
        run: |
          mkdir -p passwall-ipk
          mkdir -p artifact/installer

      - name: 下载 PassWall 包
        run: |
          # 映射架构名称
          ARCH_MAP=""
          if [ "${{ inputs.target_arch }}" == "x86_64" ]; then
            ARCH_MAP="x86_64"
          elif [ "${{ inputs.target_arch }}" == "aarch64_cortex-a53" ]; then
            ARCH_MAP="aarch64_cortex-a53"
          else
            ARCH_MAP="aarch64_generic"
          fi
          
          echo "目标架构: ${{ inputs.target_arch }}, 映射为: $ARCH_MAP"
          
          # 下载主包
          echo "下载 PassWall 主包..."
          ASSETS_URL=$(curl -s https://api.github.com/repos/xiaorouji/openwrt-passwall/releases/latest | grep "browser_download_url.*luci-app-passwall.*all.ipk" | cut -d '"' -f 4)
          if [ ! -z "$ASSETS_URL" ]; then
            echo "找到资源URL: $ASSETS_URL"
            wget -O passwall-ipk/luci-app-passwall.ipk "$ASSETS_URL" && echo "下载成功!"
          else
            echo "无法从API获取资源URL，尝试备用方法..."
            wget -O passwall-ipk/luci-app-passwall.ipk \
              https://downloads.openwrt.org/snapshots/packages/x86_64/packages/luci-app-passwall_4.0-1_all.ipk || \
            echo "无法下载主包，构建失败"
            exit 1
          fi
          
          # 下载依赖包
          echo "下载依赖包..."
          dependencies=("chinadns-ng" "dns2socks" "ipt2socks" "microsocks" 
                       "shadowsocks-libev" "shadowsocksr-libev" "simple-obfs" 
                       "tcping" "trojan-plus" "v2ray-plugin" "xray-core")
          
          # 根据构建选项添加更多依赖
          if [ "${{ inputs.build_option }}" == "standard" ] || [ "${{ inputs.build_option }}" == "full" ]; then
            dependencies+=("haproxy" "shadowsocks-rust" "sing-box")
          fi
          
          if [ "${{ inputs.build_option }}" == "full" ]; then
            dependencies+=("hysteria" "naiveproxy" "tuic-client" "xray-plugin")
          fi
          
          # 从GitHub获取依赖包
          echo "从GitHub获取依赖包..."
          ASSETS_URLS=$(curl -s https://api.github.com/repos/xiaorouji/openwrt-passwall-packages/releases/latest | grep "browser_download_url.*\.ipk" | cut -d '"' -f 4)
          
          if [ ! -z "$ASSETS_URLS" ]; then
            echo "找到资源URL列表，开始下载..."
            echo "$ASSETS_URLS" | while read url; do
              if [[ "$url" == *"_all.ipk" ]] || [[ "$url" == *"_${ARCH_MAP}.ipk" ]]; then
                filename=$(basename "$url")
                echo "下载: $filename"
                wget -O "passwall-ipk/$filename" "$url" || echo "下载 $filename 失败"
              fi
            done
          fi
          
          # 列出下载的文件
          echo "已下载的文件:"
          ls -la passwall-ipk/

      - name: 创建安装包
        run: |
          # 创建安装脚本
          cat > passwall-install.sh <<EOF
          #!/bin/sh
          # PassWall installer for iStoreOS
          
          echo "开始安装 PassWall for iStoreOS..."
          
          # 创建临时目录
          mkdir -p /tmp/passwall-install
          cd /tmp/passwall-install
          
          # 安装依赖
          echo "正在更新软件包列表..."
          opkg update
          
          echo "正在安装基本依赖..."
          opkg install libuci-lua luci-compat luci-lib-jsonc
          
          # 安装PassWall及其依赖
          echo "正在安装PassWall及其依赖..."
          cd /tmp
          opkg install /tmp/passwall-ipk/*.ipk
          
          # 重启网络和服务
          echo "正在重启服务..."
          /etc/init.d/rpcd restart
          /etc/init.d/network restart
          
          # 清理
          rm -rf /tmp/passwall-install
          echo "PassWall 安装完成！请在LuCI界面中访问服务→PassWall"
          EOF
          
          chmod +x passwall-install.sh
          
          # 创建tar包
          tar -czf passwall-package.tar.gz passwall-ipk passwall-install.sh
          
          # 创建自解压安装包
          cat > passwall-installer.run <<EOF
          #!/bin/sh
          # PassWall for iStoreOS 自解压安装包
          # 由GitHub Actions自动构建 - ${{ github.run_id }}
          # 构建时间: ${{ steps.date.outputs.date }}
          # 目标架构: ${{ inputs.target_arch }}
          
          echo "正在解压PassWall安装包..."
          ARCHIVE=\`awk '/^__ARCHIVE_BELOW__/ {print NR + 1; exit 0; }' \$0\`
          tail -n+\$ARCHIVE \$0 | tar -xz -C /tmp
          echo "正在运行安装脚本..."
          /tmp/passwall-install.sh
          exit 0
          __ARCHIVE_BELOW__
          EOF
          
          cat passwall-package.tar.gz >> passwall-installer.run
          chmod +x passwall-installer.run
          cp passwall-installer.run ./artifact/installer/
          
          # 创建版本信息文件
          echo "构建时间: ${{ steps.date.outputs.date }}" > version.txt
          echo "目标架构: ${{ inputs.target_arch }}" >> version.txt
          echo "GitHub Actions运行ID: ${{ github.run_id }}" >> version.txt
          echo "构建选项: ${{ inputs.build_option }}" >> version.txt
          cp version.txt ./artifact/installer/

      - name: 上传安装程序
        uses: actions/upload-artifact@v4
        with:
          name: passwall-installer-${{ inputs.target_arch }}
          path: ./artifact/installer/

      - name: 创建发布
        uses: softprops/action-gh-release@v1
        with:
          tag_name: passwall-${{ inputs.target_arch }}-${{ github.run_id }}
          name: PassWall for iStoreOS (${{ inputs.target_arch }}) - Build ${{ github.run_id }}
          files: |
            passwall-installer.run
            version.txt
          body: |
            ## PassWall for iStoreOS - ${{ inputs.target_arch }}
            
            构建时间: ${{ steps.date.outputs.date }}
            目标架构: ${{ inputs.target_arch }}
            GitHub Actions运行ID: ${{ github.run_id }}
            构建选项: ${{ inputs.build_option }}
            
            ### 安装方法
            
            1. 下载 `passwall-installer.run` 文件到路由器
            2. 执行 `chmod +x passwall-installer.run && ./passwall-installer.run`
            3. 安装完成后，在LuCI界面中访问服务→PassWall
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}